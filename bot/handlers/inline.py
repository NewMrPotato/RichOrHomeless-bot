from aiogram import F
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent
from aiogram import Router
from bot.factories import get_bot
from database.session import AsyncSessionLocal
from bot.repositories.user_repo import UserRepo
from bot.services.wealth_service import generate_capital, pick_phrase_and_emoji
import asyncio
import uuid


router = Router()


async def register_inline_handlers(dp):
    dp.include_router(router)




@router.inline_query()
async def inline_wealth(query: InlineQuery):
    # –ë—É–¥–µ–º –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ª—é–±–æ–π inline-–∑–∞–ø—Ä–æ—Å –∫ –±–æ—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: @BotUsername)
    # query.from_user.id ‚Äî telegram id
    user = query.from_user
    tg_id = user.id


    # –ü–æ–ª—É—á–∞–µ–º/—Å–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é –∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    async with AsyncSessionLocal() as session:
        repo = UserRepo(session)


        async def capital_generator(uid: int):
            return await generate_capital(uid)


        record = await repo.set_capital_if_absent_or_expired(tg_id, capital_generator)
        cap = record.capital


    phrase, emoji = pick_phrase_and_emoji(cap)


    text = f"{phrase}, —É –º–µ–Ω—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${cap:,.2f} {emoji}"


    result = InlineQueryResultArticle(
        id=str(uuid.uuid4()),
        #title=f"–¢–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª: ${cap:,.2f}",
        title=f"–£–∑–Ω–∞–π —Å–≤–æ—ë —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ üëÄ",
        input_message_content=InputTextMessageContent(message_text=text)
    )


    await query.answer(results=[result], cache_time=0) # cache_time=0 —á—Ç–æ–±—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è–ª—Å—è –¥–ª—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫